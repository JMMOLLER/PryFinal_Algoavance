/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FRAMES;

import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jlmmj
 */
public class Ordenamiento extends javax.swing.JFrame {
ArrayList<String[]> my_dict = new ArrayList<>();  
DefaultTableModel modelo= new DefaultTableModel();
    /**
     * Creates new form Ordenamiento
     * @throws java.sql.SQLException
     * @throws java.lang.CloneNotSupportedException
     */
    public Ordenamiento() throws SQLException, CloneNotSupportedException {
        initComponents();
        this.setLocationRelativeTo(this);
        this.getContentPane().setBackground(new Color(204, 255, 255));
        Clases.data.setElements();
        Table("Reset", -1);
    }

    
    public void Table(String tipo, int column) throws SQLException, CloneNotSupportedException{
        ArrayList<String> lista = new ArrayList<>();
        if(column == -1){
            lista.add("ID");
            lista.add("Descripción");
            lista.add("Prioridad");
            lista.add("Proveedor");
            lista.add("Costo");
            lista.add("Razón Social");

            for (String columna : lista) {
                modelo.addColumn(columna);
            }
            TBL_AREA.setModel(modelo);
        }

        if(null != tipo)switch (tipo) {
            case "Reset":
                modelo.setRowCount(0);//ELIMINA LOS DATOS DE LA TABLA
                my_dict=Clases.data.getElements();//TRAE LOS ELEMENTOS DE LA BASE DE DATOS
                my_dict=Clases.data.setFormatList(my_dict);//A LOS ELEMENTOS DE LA BASE DE DATOS LE DA AL CÓDIGO EL FORMATO
                break;
            case "Burbúja":
                modelo.setRowCount(0);//ELIMINA LOS DATOS DE LA TABLA
                my_dict= Clases.data.Burbuja(0);
            case "Selección":
                modelo.setRowCount(0);//ELIMINA LOS DATOS DE LA TABLA
                my_dict= Clases.data.Seleccion(0);
            case "Shell Sort":
                modelo.setRowCount(0);//ELIMINA LOS DATOS DE LA TABLA
                my_dict= Clases.data.Shell_sort(column);//LLAMA AL METODO SHELL SORT
                break;
            case "Quick Sort":
                modelo.setRowCount(0);//ELIMINA LOS DATOS DE LA TABLA
                my_dict= Clases.data.Quick_sort(column);//LLAMA AL METODO QUICK SORT
                /*for (int l = 0; l < my_dict.size(); l++) {//AGREGA SIMBOLO DE CODIGO
                String ID="P"+my_dict.get(l)[0];
                my_dict.get(l)[0] = ID;
                }*/
                break;
            case "Inserción":
                modelo.setRowCount(0);//ELIMINA LOS DATOS DE LA TABLA
                my_dict= Clases.data.Insercion(column);//LLAMA AL METODO QUICK SORT
                break;
            default:
                break;
        }
        
        for (String []Datos : my_dict){
            modelo.addRow(Datos);//AGREGA LAS FILAS AL MODELO
        }
        TBL_AREA.setModel(modelo);//AGREGA EL MODELO A LA TABLA
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BTN_ORDENAR = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        BTN_RESET = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBL_AREA = new javax.swing.JTable();
        CBO_ORDENAR = new javax.swing.JComboBox<>();
        CBO_COLUMNA = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ordernar Base de Datos");

        BTN_ORDENAR.setBackground(new java.awt.Color(255, 204, 204));
        BTN_ORDENAR.setForeground(new java.awt.Color(0, 0, 0));
        BTN_ORDENAR.setText("Ordenar");
        BTN_ORDENAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_ORDENARActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Ordenar");

        BTN_RESET.setBackground(new java.awt.Color(255, 204, 204));
        BTN_RESET.setForeground(new java.awt.Color(0, 0, 0));
        BTN_RESET.setText("Reset");
        BTN_RESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_RESETActionPerformed(evt);
            }
        });

        TBL_AREA.setBackground(new java.awt.Color(102, 204, 255));
        TBL_AREA.setForeground(new java.awt.Color(0, 0, 0));
        TBL_AREA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Prioridad", "Proveedor", "Costo"
            }
        ));
        jScrollPane2.setViewportView(TBL_AREA);

        CBO_ORDENAR.setBackground(new java.awt.Color(255, 204, 204));
        CBO_ORDENAR.setForeground(new java.awt.Color(0, 0, 0));
        CBO_ORDENAR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Shell Sort", "Quick Sort", "Selección", "Burbúja", "Inserción" }));

        CBO_COLUMNA.setBackground(new java.awt.Color(255, 204, 204));
        CBO_COLUMNA.setForeground(new java.awt.Color(0, 0, 0));
        CBO_COLUMNA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Prioridad", "Costo" }));
        CBO_COLUMNA.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Buscar por:");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Usar método:");

        jSeparator1.setBackground(new java.awt.Color(255, 153, 153));
        jSeparator1.setForeground(new java.awt.Color(255, 153, 153));

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(CBO_ORDENAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(CBO_COLUMNA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(118, 118, 118)
                                .addComponent(BTN_ORDENAR)))))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(396, 396, 396))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(269, 269, 269)
                        .addComponent(BTN_RESET)
                        .addGap(56, 56, 56))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBO_ORDENAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBO_COLUMNA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTN_ORDENAR)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTN_RESET)
                    .addComponent(jButton2))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_ORDENARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_ORDENARActionPerformed
        // TODO add your handling code here:
        if(CBO_ORDENAR.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Sebe escocger un método de ordenación.");
        }else if(CBO_ORDENAR.getSelectedItem()=="Shell Sort"){
            int column=0;//ORDENA POR DEFECTO POR ID
            if(CBO_COLUMNA.getSelectedItem().equals("Prioridad")){
                column = 2;
            }else if(CBO_COLUMNA.getSelectedItem().equals("Costo")){
                column = 4;
            }
            try {
                Table("Shell Sort", column);
            } catch (SQLException | CloneNotSupportedException ex) {
                JOptionPane.showMessageDialog(null, "Se ha generado un error con la Base de Datos.");
            }
        }else if(CBO_ORDENAR.getSelectedItem()=="Quick Sort"){
            int column=0;//ORDENA POR DEFECTO POR ID
            if(CBO_COLUMNA.getSelectedItem().equals("ID") || CBO_COLUMNA.getSelectedItem().equals("Costo")){
                if(CBO_COLUMNA.getSelectedItem().equals("Costo")){
                    column = 4;
                }
                try {
                    Table("Quick Sort", column);
                } catch (SQLException | CloneNotSupportedException ex) {
                    JOptionPane.showMessageDialog(null, "Se ha generado un error con la Base de Datos.");
                }
            }else{
                JOptionPane.showMessageDialog(null, "De momento no se ordenar por la categoría seleccionada usando este método.");
            }
            
        }else if(CBO_ORDENAR.getSelectedItem().equals("Burbúja")){
            int column=0;//ORDENA POR DEFECTO POR ID
            if(CBO_COLUMNA.getSelectedItem().equals("Prioridad")){
                column = 2;
            }else if(CBO_COLUMNA.getSelectedItem().equals("Costo")){
                column = 4;
            }
            try {
                Table("Burbúja", column);
            } catch (SQLException | CloneNotSupportedException ex) {
                JOptionPane.showMessageDialog(null, "Se ha generado un error con la Base de Datos.");
            }
        }else if(CBO_ORDENAR.getSelectedItem().equals("Selección")){
            int column=0;//ORDENA POR DEFECTO POR ID
            if(CBO_COLUMNA.getSelectedItem().equals("Prioridad")){
                column = 2;
            }else if(CBO_COLUMNA.getSelectedItem().equals("Costo")){
                column = 4;
            }
            try {
                Table("Selección", column);
            } catch (SQLException | CloneNotSupportedException ex) {
                JOptionPane.showMessageDialog(null, "Se ha generado un error con la Base de Datos.");
            }
        }else if(CBO_ORDENAR.getSelectedItem().equals("Inserción")){
            int column=0;//ORDENA POR DEFECTO POR ID
            if(CBO_COLUMNA.getSelectedItem().equals("ID") || CBO_COLUMNA.getSelectedItem().equals("Costo")){
                if(CBO_COLUMNA.getSelectedItem().equals("Costo")){
                    column = 4;
                }
                try {
                    Table("Inserción", column);
                } catch (SQLException | CloneNotSupportedException ex) {
                    JOptionPane.showMessageDialog(null, "Se ha generado un error con la Base de Datos.");
                }
            }else{
                JOptionPane.showMessageDialog(null, "De momento no se puede ordenar por la categoría seleccionada usando este método.");
            }

        }
    }//GEN-LAST:event_BTN_ORDENARActionPerformed

    private void BTN_RESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_RESETActionPerformed
        try {
            // TODO add your handling code here:
            Table("Reset",0);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Se ha generado un error en la soliitud de los datos internos.");
        } catch (CloneNotSupportedException ex) {
            Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BTN_RESETActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Main ma= new Main();
        ma.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ordenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ordenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ordenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ordenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Ordenamiento().setVisible(true);
            } catch (SQLException | CloneNotSupportedException ex) {
                Logger.getLogger(Ordenamiento.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_ORDENAR;
    private javax.swing.JButton BTN_RESET;
    private javax.swing.JComboBox<String> CBO_COLUMNA;
    private javax.swing.JComboBox<String> CBO_ORDENAR;
    private javax.swing.JTable TBL_AREA;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
